package org.opentestsystem.rdw.admin.model;

import org.opentestsystem.rdw.common.model.Subject;

public class Group {
    private int id;
    private String name;
    private String schoolName;
    private Subject subject;
    private int schoolYear;
    private int studentCount;
    private boolean isDeleted;

    /**
     * @return The group id
     */
    public int getId() {
        return id;
    }

    /**
     * @return The name of the group
     */
    public String getName() {
        return name;
    }

    /**
     * @return The name of the school
     */
    public String getSchoolName() {
        return schoolName;
    }

    /**
     * @return The subject this group applies to, or NULL if it applies to all subjects
     */
    public Subject getSubject() {
        return subject;
    }

    /**
     * @return The school year for this group
     */
    public int getSchoolYear() {
        return schoolYear;
    }

    /**
     * @return the number of students in the group
     */
    public int getStudentCount() {
        return studentCount;
    }

    /**
     * @return true if this group is deleted
     */
    public boolean getIsDeleted() {
        return isDeleted;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private int id;
        private String name;
        private String schoolName;
        private Subject subject;
        private int schoolYear;
        private int studentCount;
        private boolean isDeleted;

        public Builder id(final int id) {
            this.id = id;
            return this;
        }

        public Builder name(final String name) {
            this.name = name;
            return this;
        }

        public Builder schoolName(final String schoolName) {
            this.schoolName = schoolName;
            return this;
        }

        public Builder subject(final Subject subject) {
            this.subject = subject;
            return this;
        }

        public Builder schoolYear(final int schoolYear) {
            this.schoolYear = schoolYear;
            return this;
        }

        public Builder studentCount(final int studentCount) {
            this.studentCount = studentCount;
            return this;
        }

        public Builder isDeleted(final boolean isDeleted) {
            this.isDeleted = isDeleted;
            return this;
        }

        public Group build() {
            final Group group = new Group();

            group.id = id;
            group.name = name;
            group.schoolName = schoolName;
            group.subject = subject;
            group.schoolYear = schoolYear;
            group.studentCount = studentCount;
            group.isDeleted = isDeleted;

            return group;
        }
    }
}
