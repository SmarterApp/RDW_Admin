package org.opentestsystem.rdw.admin.service.impl;

import org.opentestsystem.rdw.admin.service.GroupsSource;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.stream.annotation.EnableBinding;
import org.springframework.cloud.stream.messaging.Source;
import org.springframework.messaging.support.MessageBuilder;
import org.springframework.stereotype.Service;
import org.opentestsystem.rdw.messaging.RdwMessageHeaderAccessor;


import static org.opentestsystem.rdw.messaging.RdwMessageHeaderAccessor.wrap;

/**
 * Default implementation of GroupsSource.
 * <p>
 * It wraps the content with a common message header.
 * </p>
 */
@Service
@EnableBinding(Source.class)
class DefaultGroupsSource implements GroupsSource {

    private final Logger logger = LoggerFactory.getLogger(getClass());
    private final Source source;

    @Autowired
    public DefaultGroupsSource(final Source source) {
                this.source = source;
            }

    /**
     * Submit the given payload to the queue.
     *
     * @param hash     content media type of body, e.g. "text/plain"
     * @param importId id of group csv chunk associated with this content
     */
    @Override
    public void send(final byte[] body, final String hash, final String contentType, final Long importId) {
        //Debugging statement just for now.
        logger.info("sending data for {}, {}", hash, importId);

        final RdwMessageHeaderAccessor accessor = wrap(null)
                .setReceivedNow()
                .setContent("GROUPS")
                .setContentType(contentType)
                .setImportId(importId);

        source.output().send(MessageBuilder.createMessage(body, accessor.getMessageHeaders()));
    }

}
