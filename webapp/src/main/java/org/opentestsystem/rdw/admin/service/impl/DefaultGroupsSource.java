package org.opentestsystem.rdw.admin.service.impl;

import org.opentestsystem.rdw.admin.service.GroupsSource;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.stream.annotation.EnableBinding;
import org.springframework.cloud.stream.messaging.Source;
import org.springframework.messaging.support.MessageBuilder;
import org.springframework.stereotype.Service;

/**
 * Default implementation of ImportSource.
 * <p>
 * It dynamically routes messages based on the content, e.g. EXAM, PACKAGE.
 * </p>
 */
@Service
@EnableBinding(Source.class)
class DefaultGroupsSource implements GroupsSource {

    private final Logger logger = LoggerFactory.getLogger(getClass());
    private final Source source;

    @Autowired
    public DefaultGroupsSource(final Source source) {
                this.source = source;
            }

    /**
     * Submit the given payload to the appropriate queue, based on content.
     *
     * @param hash     content media type of body, e.g. "text/plain"
     * @param importId id of import resource associated with this content
     */
    @Override
    public void send(final String hash, final Long importId) {
        logger.info("sending {}, {}", hash, importId);
        source.output().send(MessageBuilder.withPayload(hash).build());
    }

}
