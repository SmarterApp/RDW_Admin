package org.opentestsystem.rdw.admin.service.impl;


import com.google.common.collect.ImmutableSet;
import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.rdw.admin.repository.StudentGroupBatchRepository;
import org.opentestsystem.rdw.admin.security.User;
import org.opentestsystem.rdw.archive.ArchiveService;
import org.springframework.security.core.authority.SimpleGrantedAuthority;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class DefaultStudentGroupBatchServiceTest {

    private StudentGroupBatchRepository repository;
    private ArchiveService archiveService;
    private DefaultStudentGroupBatchService service;

    private User user = User.builder()
            .id("user")
            .username("test")
            .authorities(ImmutableSet.of(new SimpleGrantedAuthority("ROLE_USER")))
            .build();

    @Before
    public void before() {
        repository = mock(StudentGroupBatchRepository.class);
        archiveService = mock(ArchiveService.class);
        service = new DefaultStudentGroupBatchService(repository, archiveService);
    }

    @Test
    public void itShouldUseRepositoryToFindAllStudentGroupBatches() {
        final Iterable studentGroupBatches = mock(Iterable.class);
        when(repository.findByCreator("test")).thenReturn(studentGroupBatches);

        assertThat(service.findAllStudentGroupBatches(user)).isEqualTo(studentGroupBatches);
    }
}